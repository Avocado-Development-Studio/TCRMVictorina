name: Android CI

# Триггерить при пуше в любую ветку или при создании pull request
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build-android:
    name: Сборка Android-приложения
    runs-on: ubuntu-latest

    env:
      # Указываем версию Android SDK, которую нужно загрузить
      ANDROID_SDK_ROOT: ${{ runner.tool_cache }}/android-sdk

    steps:
      # 1. Клонируем репозиторий
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Устанавливаем Java (OpenJDK 11)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # 3. Устанавливаем Android SDK Command-line Tools и необходимые пакеты через sdkmanager
      - name: Download Android SDK Command-line Tools
        run: |
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          curl -sSL "https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip" -o cmdline-tools.zip
          unzip -q cmdline-tools.zip
          rm cmdline-tools.zip
          # Переместим распакованную папку в subdirectory latest, чтобы sdkmanager её видел:
          mkdir -p latest
          mv cmdline-tools/* latest/
      - name: Update PATH to include Android SDK tools
        run: |
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH

      - name: Accept Android SDK licenses
        run: |
          yes | sdkmanager --licenses

      - name: Install Android SDK Platforms and Build-tools
        run: |
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # 4. (Опционально) Если нужен кэш Gradle, чтобы ускорить сборки
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 5. Переходим в папку android и запускаем сборку
      - name: Build Android Release Bundle
        working-directory: android
        run: |
          chmod +x ./gradlew
          ./gradlew app:bundleRelease

      # 6. (Опционально) Загружаем собранный AAB как артефакт
      - name: Upload AAB artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: app-release-bundle
          path: android/app/build/outputs/bundle/release/app-release.aab
